version: 2.1

orbs:
  slack: circleci/slack@5.1.1
  scotty-orb: cci-releng/scotty-orb@0.0.12

executors:
  deploy:
    docker:
      - image: cimg/deploy:2025.01
    resource_class: medium
  ccc:
    docker:
      - image: circleci/command-convenience:0.1
        auth:
          username: $DOCKER_HUB_USER
          password: $DOCKER_HUB_PASSWORD

commands:
  notify_failing_main:
    steps:
      - slack/notify:
          channel: server-alerts
          branch_pattern: main
          event: fail
          template: basic_fail_1
  set_up_container:
    description: "Set up a container build environment"
    steps:
      - setup_remote_docker
      - checkout

jobs:
  # Images
  scan_postgresql:
    executor: ccc
    steps:
      - set_up_container
      - run:
          name: Scan server-postgres image
          command: scan
          environment:
            NAME: server-postgres
            DOCKERFILE_PATH: Dockerfile
            MAJOR_VERSION: 12.22
          pwd: postgresql/12
  scan_rabbitmq:
    executor: ccc
    steps:
      - set_up_container
      - run:
          name: Scan server-rabbitmq image
          command: scan
          environment:
            NAME: server-rabbitmq
            DOCKERFILE_PATH: Dockerfile
            MAJOR_VERSION: 3.12
          pwd: rabbitmq/3
  scan_redis:
    executor: ccc
    steps:
      - set_up_container
      - run:
          name: Scan server-redis image
          command: scan
          environment:
            NAME: server-redis
            DOCKERFILE_PATH: Dockerfile
            MAJOR_VERSION: 6.2
          pwd: redis/6.2/debian-10
  publish_postgresql:
    executor: ccc
    steps:
      - set_up_container
      - run:
          name: Build and publish server-postgres image
          command: publish
          environment:
            NAME: server-postgres
            DOCKERFILE_PATH: Dockerfile
            DOCKER_REGISTRY: dockerhub
            MAJOR_VERSION: 12.22
          pwd: postgresql/12
  publish_rabbitmq:
    executor: ccc
    steps:
      - set_up_container
      - run:
          name: Build and publish server-rabbitmq image
          command: publish
          environment:
            NAME: server-rabbitmq
            DOCKERFILE_PATH: Dockerfile
            DOCKER_REGISTRY: dockerhub
            MAJOR_VERSION: 3.12
          pwd: rabbitmq/3
  publish_redis:
    executor: ccc
    steps:
      - set_up_container
      - run:
          name: Build and publish server-redis image
          command: publish
          environment:
            NAME: server-redis
            DOCKERFILE_PATH: Dockerfile
            DOCKER_REGISTRY: dockerhub
            MAJOR_VERSION: 6.2
          pwd: redis/6.2/debian-10

  # Charts
  validate-charts:
    executor: deploy
    steps:
      - checkout
      - run:
          command: ./do kubeconform
          when: always
      - notify_failing_main
  package-charts:
    executor: deploy
    steps:
      - checkout
      - run:
          name: Install signing keys
          command: |
            exec 2>/dev/null

            echo "Importing signing keys"
            echo -n "${SIGNING_KEY_ENCODED}" | base64 --decode >signing_key_decoded.key
            gpg --batch --yes --passphrase "${SIGNING_KEY_PASSPHRASE}" --import signing_key_decoded.key
            rm signing_key_decoded.key
            curl https://keys.openpgp.org/vks/v1/by-fingerprint/"${GPG_ID}" >pub-key.asc
            gpg --import pub-key.asc
            rm pub-key.asc

            echo "Convert to legacy gpg format per Helm requirements"
            gpg --export >~/.gnupg/pubring.gpg
            gpg --batch --yes --pinentry-mode=loopback --passphrase "${SIGNING_KEY_PASSPHRASE}" --export-secret-keys "${GPG_ID}" >~/.gnupg/secring.gpg
      - run:
          name: Package and sign chart
          command: |
            echo "${SIGNING_KEY_PASSPHRASE}" | ./do package-all-charts ./helm sign --passphrase-file -
      - persist_to_workspace:
          root: .
          paths: [./target]
      - notify_failing_main
  publish-chart:
    executor: deploy
    parameters:
      repo:
        type: string
      chart_name:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install package_cloud
          command: |
            sudo apt-get update && sudo apt-get install ruby-rubygems -y
            sudo gem install --no-document package_cloud
      - run:
          name: Publish Helm chart
          command: |
            package_cloud push circleci/<< parameters.repo >>/helm/v1 \
              ./target/<< parameters.chart_name >>*.tgz
      - notify_failing_main

workflows:
  my-workflow:
    jobs:
      # Image jobs
      - scan_rabbitmq:
          context: "org-global"
          filters:
            branches:
              ignore:
                - main
                - /^server-\d\..+/
      - scan_postgresql:
          context: "org-global"
          filters:
            branches:
              ignore:
                - main
                - /^server-\d\..+/
      - scan_redis:
          context: "org-global"
          filters:
            branches:
              ignore:
                - main
                - /^server-\d\..+/
      - publish_rabbitmq:
          context: "org-global"
          filters:
            branches:
              only:
                - main
                - /^server-\d\..+/
      - publish_postgresql:
          context: "org-global"
          filters:
            branches:
              only:
                - main
                - /^server-\d\..+/
      - publish_redis:
          context: "org-global"
          filters:
            branches:
              only:
                - main
                - /^server-\d\..+/
      - scotty-orb/test-in-server-and-promote:
          name: test-in-server-and-promote
          context: ["org-global", github-readonly]
          requires:
            - publish_rabbitmq
            - publish_postgresql
            - publish_redis
            - validate-charts
          promotion_component_list: "circleci/server-postgres circleci/server-rabbitmq circleci/server-redis"
          filters:
            branches:
              only:
                - main
                - /^server-\d\..+/

      # Chart jobs
      - validate-charts
      - package-charts:
          context: releng-signing
          requires: [validate-charts]
      # Mongo chart
      - approve-publish-mongo-chart:
          type: approval
          filters:
            branches:
              only: [main, /^server-\d\..+/]
          requires: [package-charts]
      - publish-chart:
          name: publish-mongo-chart
          repo: server-mongo
          chart_name: mongodb
          requires: [approve-publish-mongo-chart]
          context: runner-package-deploy
      # Postgres chart
      - approve-publish-postgres-chart:
          type: approval
          filters:
            branches:
              only: [main, /^server-\d\..+/]
          requires: [package-charts, scan_postgresql]
      - publish-chart:
          name: publish-postgres-chart
          repo: server-postgres
          chart_name: postgresql
          requires: [approve-publish-postgres-chart]
          context: runner-package-deploy
      # RabbitMQ chart
      - approve-publish-rabbitmq-chart:
          type: approval
          filters:
            branches:
              only: [main, /^server-\d\..+/]
          requires: [package-charts, scan_rabbitmq]
      - publish-chart:
          name: publish-rabbitmq-chart
          repo: server-rabbitmq
          chart_name: rabbitmq
          requires: [approve-publish-rabbitmq-chart]
          context: runner-package-deploy
      # Redis chart
      - approve-publish-redis-chart:
          type: approval
          filters:
            branches:
              only: [main, /^server-\d\..+/]
          requires: [package-charts, scan_redis]
      - publish-chart:
          name: publish-redis-chart
          repo: server-redis
          chart_name: redis
          requires: [approve-publish-redis-chart]
          context: runner-package-deploy
